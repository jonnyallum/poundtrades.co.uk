Here’s how to add favourite logic to your app — so users can tap a heart icon on listings and save them to their own favourites collection in Firestore.
1. Firestore Structure for Favourites
Each user gets a subcollection:
/users/{userId}/favourites/{listingId} 
2. Add Favourite Logic to firestore.js
// api/firestore.js import { doc, setDoc, deleteDoc, getDoc } from 'firebase/firestore'; import { db } from '../lib/firebase'; export const toggleFavourite = async (userId, listing) => { const favRef = doc(db, `users/${userId}/favourites`, listing.id); const favSnap = await getDoc(favRef); if (favSnap.exists()) { await deleteDoc(favRef); return false; // removed } else { await setDoc(favRef, listing); return true; // added } }; export const isFavourited = async (userId, listingId) => { const favRef = doc(db, `users/${userId}/favourites`, listingId); const favSnap = await getDoc(favRef); return favSnap.exists(); }; 
3. Update ListingCard.js to Show Favourite Button
At the top of ListingCard.js:
import { useEffect, useState } from 'react'; import { useAuth } from '../lib/auth'; import { toggleFavourite, isFavourited } from '../api/firestore'; import { Ionicons } from '@expo/vector-icons'; // Heart icon 
Add this inside the component:
const { user } = useAuth(); const [faved, setFaved] = useState(false); useEffect(() => { if (user?.uid) { isFavourited(user.uid, listing.id).then(setFaved); } }, []); const handleToggleFavourite = async () => { const result = await toggleFavourite(user.uid, listing); setFaved(result); }; 
Add the heart icon to your listing card’s top-right corner (within the outer card View):
<TouchableOpacity onPress={handleToggleFavourite} className="absolute top-2 right-2 z-10" > <Ionicons name={faved ? 'heart' : 'heart-outline'} size={24} color={faved ? '#facc15' : '#fff'} /> </TouchableOpacity> 
Result:
• Logged-in users can favourite any listing
• It's saved under their user profile
• Dashboard.js already supports favourites tab and will auto-load them