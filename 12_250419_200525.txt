1. Setup Needed Before Use

Firebase Authentication enabled in console

Google login set up (with SHA-1 key + OAuth client ID)

expo-auth-session installed for Google auth:

npx expo install expo-auth-session

2. Login screen. 

// screens/LoginScreen.js
import React, { useState } from 'react';
import {
  View,
  Text,
  TextInput,
  TouchableOpacity,
  Alert,
} from 'react-native';
import { signInWithEmailAndPassword, createUserWithEmailAndPassword } from 'firebase/auth';
import * as Google from 'expo-auth-session/providers/google';
import { auth } from '../lib/firebase';
import { useAuth } from '../lib/auth';
import { StatusBar } from 'expo-status-bar';

const LoginScreen = ({ navigation }) => {
  const [email, setEmail] = useState('');
  const [password, setPassword] = useState('');
  const { loginAsGuest } = useAuth();

  const [request, response, promptAsync] = Google.useIdTokenAuthRequest({
    clientId: 'YOUR_GOOGLE_CLIENT_ID.apps.googleusercontent.com',
  });

  const handleLogin = async () => {
    try {
      await signInWithEmailAndPassword(auth, email, password);
      navigation.replace('MainTabs');
    } catch (err) {
      Alert.alert('Login Failed', err.message);
    }
  };

  const handleRegister = async () => {
    try {
      await createUserWithEmailAndPassword(auth, email, password);
      navigation.replace('MainTabs');
    } catch (err) {
      Alert.alert('Registration Failed', err.message);
    }
  };

  const handleGoogleLogin = async () => {
    try {
      promptAsync();
    } catch (err) {
      Alert.alert('Google Login Failed', err.message);
    }
  };

  const handleGuestLogin = async () => {
    await loginAsGuest(); // defined in useAuth()
    navigation.replace('MainTabs');
  };

  return (
    <View className="flex-1 bg-black justify-center px-6">
      <StatusBar style="light" />
      <Text className="text-yellow-400 text-3xl font-bold mb-6 text-center">
        PoundTrades Login
      </Text>

      <TextInput
        placeholder="Email"
        placeholderTextColor="#aaa"
        className="bg-gray-800 text-white rounded-xl p-4 mb-3"
        onChangeText={setEmail}
        value={email}
      />
      <TextInput
        placeholder="Password"
        placeholderTextColor="#aaa"
        className="bg-gray-800 text-white rounded-xl p-4 mb-6"
        secureTextEntry
        onChangeText={setPassword}
        value={password}
      />

      <TouchableOpacity
        onPress={handleLogin}
        className="bg-yellow-500 py-4 rounded-xl mb-3"
      >
        <Text className="text-black text-center font-bold">Login</Text>
      </TouchableOpacity>

      <TouchableOpacity
        onPress={handleRegister}
        className="bg-gray-700 py-4 rounded-xl mb-3"
      >
        <Text className="text-white text-center">Register</Text>
      </TouchableOpacity>

      <TouchableOpacity
        disabled={!request}
        onPress={handleGoogleLogin}
        className="bg-blue-600 py-4 rounded-xl mb-3"
      >
        <Text className="text-white text-center">Sign in with Google</Text>
      </TouchableOpacity>

      <TouchableOpacity
        onPress={handleGuestLogin}
        className="border border-yellow-500 py-4 rounded-xl"
      >
        <Text className="text-yellow-400 text-center">Continue as Guest</Text>
      </TouchableOpacity>
    </View>
  );
};

export default LoginScreen;